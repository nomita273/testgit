//
// Module uart_v2k.uart_top.struct
//
// Created:
//          by - user.group (host.domain)
//          at - 12:00:44 17/05/2007
//
// Generated by Mentor Graphics' HDL Designer(TM) 2007.1
//

`resetall
`timescale 1ns/10ps
module uart_top( 
   // Port Declarations
   input   wire    [2:0]  addr,             // address
   input   wire           clk,              // 10 MHz clock
   input   wire           cs,               // hip select
   input   wire    [7:0]  datin,            // 8-bit data in bus from cpu
   input   wire           nrw,              // read(0),write(1)
   input   wire           rst,              // reset(0)
   input   wire           sin,              // serial input
   output  wire    [7:0]  buffered_datout, 
   output  wire    [7:0]  datout,           // 8-bit data out bus to cpu
   output  wire           int,              // interrupt(1)
   output  wire           sout              // serial output
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire        clear_flags;
wire        clk_div_en;
wire        clr_int_en;
wire  [7:0] div_data;
wire        enable_rcv_clk;
wire        enable_write;
wire        enable_xmit_clk;
wire        sample;
wire  [7:0] ser_if_data;
wire  [1:0] ser_if_select;
wire        start_xmit;
wire        xmitdt_en;


// Instances 
address_decode U_3( 
   .addr          (addr), 
   .clk           (clk), 
   .rst           (rst), 
   .clk_div_en    (clk_div_en), 
   .clr_int_en    (clr_int_en), 
   .ser_if_select (ser_if_select), 
   .xmitdt_en     (xmitdt_en)
); 

clock_divider U_2( 
   .addr            (addr[0]), 
   .clk             (clk), 
   .clk_div_en      (clk_div_en), 
   .datin           (datin), 
   .enable_rcv_clk  (enable_rcv_clk), 
   .enable_write    (enable_write), 
   .enable_xmit_clk (enable_xmit_clk), 
   .rst             (rst), 
   .div_data        (div_data), 
   .sample          (sample)
); 

cpu_interface U_1( 
   .clk          (clk), 
   .clk_div_en   (clk_div_en), 
   .clr_int_en   (clr_int_en), 
   .cs           (cs), 
   .div_data     (div_data), 
   .nrw          (nrw), 
   .rst          (rst), 
   .ser_if_data  (ser_if_data), 
   .xmitdt_en    (xmitdt_en), 
   .clear_flags  (clear_flags), 
   .datout       (datout), 
   .enable_write (enable_write), 
   .start_xmit   (start_xmit)
); 

serial_interface U_4( 
   .clear_flags     (clear_flags), 
   .clk             (clk), 
   .datin           (datin), 
   .enable_write    (enable_write), 
   .rst             (rst), 
   .sample          (sample), 
   .ser_if_select   (ser_if_select), 
   .sin             (sin), 
   .start_xmit      (start_xmit), 
   .xmitdt_en       (xmitdt_en), 
   .enable_rcv_clk  (enable_rcv_clk), 
   .enable_xmit_clk (enable_xmit_clk), 
   .int             (int), 
   .ser_if_data     (ser_if_data), 
   .sout            (sout)
); 

// HDL Embedded Text Block 1 tristate
// eb1 1 generate
generate
  genvar i;
  for ( i=0; i<8; i=i+1 )
  begin : bgen
    assign buffered_datout[i] = ~cs ? datout[i] : 1'bz;
  end
endgenerate 


endmodule // uart_top

