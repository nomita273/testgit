//
// Module uart_v2k.serial_interface.struct
//
// Created:
//          by - user.group (host.domain)
//          at - 12:00:44 17/05/2007
//
// Generated by Mentor Graphics' HDL Designer(TM) 2007.1
//

`resetall
`timescale 1ns/10ps
module serial_interface( 
   // Port Declarations
   input   wire           clear_flags, 
   input   wire           clk, 
   input   wire    [7:0]  datin, 
   output  wire           enable_rcv_clk, 
   input   wire           enable_write, 
   output  wire           enable_xmit_clk, 
   output  wire           int, 
   input   wire           rst, 
   input   wire           sample, 
   output  wire    [7:0]  ser_if_data, 
   input   wire    [1:0]  ser_if_select, 
   input   wire           sin, 
   output  wire           sout, 
   input   wire           start_xmit, 
   input   wire           xmitdt_en
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire              done_rcving;
wire              done_xmitting;
wire signed [3:0] rcv_bit_cnt;
wire              rcving;
wire              read_bit;
wire        [7:0] recvdt;
wire        [7:0] status;
wire        [7:0] xmitdt;
wire              xmitting;
wire        [7:0] zeros;


// ModuleWare signal declarations(v1.9) for instance 'ser_out_mux' of 'mux'
reg [7:0] mw_ser_out_muxtemp_dout;

reg [7:0] xmitdt_reg;
reg [7:0] recvdt_reg;

// Instances 
status_registers U_1( 
   .clear_flags   (clear_flags), 
   .clk           (clk), 
   .done_rcving   (done_rcving), 
   .done_xmitting (done_xmitting), 
   .rcving        (rcving), 
   .rst           (rst), 
   .xmitting      (xmitting), 
   .int           (int), 
   .status        (status)
); 

xmit_rcv_control U_0( 
   .clk             (clk), 
   .rst             (rst), 
   .sample          (sample), 
   .sin             (sin), 
   .start_xmit      (start_xmit), 
   .xmitdt          (xmitdt), 
   .done_rcving     (done_rcving), 
   .done_xmitting   (done_xmitting), 
   .enable_rcv_clk  (enable_rcv_clk), 
   .enable_xmit_clk (enable_xmit_clk), 
   .rcv_bit_cnt     (rcv_bit_cnt), 
   .rcving          (rcving), 
   .read_bit        (read_bit), 
   .sout            (sout), 
   .xmitting        (xmitting)
); 

// HDL Embedded Block 1 convert
// Non hierarchical flowchart

/////////////////////////////////////////////////////////////////
// Flowchart process1
always @ (posedge clk, negedge rst)
begin : process1_flowchart_proc
   // Asynchronous Reset
   if (!rst) begin
      // Reset Actions
      xmitdt_reg <= 0;
      recvdt_reg <= 0;

   end
   else
   begin
      if (xmitdt_en  && enable_write) begin
         xmitdt_reg <= datin;
      end
      else if (read_bit) begin
         recvdt_reg[rcv_bit_cnt] <= sin;
      end

   end
end

// Concurrent statements
assign xmitdt = xmitdt_reg;
assign recvdt = recvdt_reg;


// ModuleWare code(v1.9) for instance 'zeros' of 'constval'
assign zeros = 8'd0;

// ModuleWare code(v1.9) for instance 'ser_out_mux' of 'mux'
always @(xmitdt, recvdt, status, zeros, ser_if_select)
begin : ser_out_muxcombo_proc
   case (ser_if_select)
      2'd0: mw_ser_out_muxtemp_dout = xmitdt;
      2'd1: mw_ser_out_muxtemp_dout = recvdt;
      2'd2: mw_ser_out_muxtemp_dout = status;
      2'd3: mw_ser_out_muxtemp_dout = zeros;
      default: mw_ser_out_muxtemp_dout = 8'bx;
   endcase
end
assign ser_if_data = mw_ser_out_muxtemp_dout;

endmodule // serial_interface

